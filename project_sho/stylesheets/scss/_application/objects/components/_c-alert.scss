/*
---
name     : c-alert
category :
  - Objects/Components
  - Objects/Components/c-alert
---

1 行メッセージ。  
**太字** にしたいテキストは `strong` `em` `b` のいずれか（適切な要素）でマークアップする。

```html
<div class="c-alert">
  <p class="c-alert__message">
    <strong>タイトル！</strong>1 行のメッセージ文です（デフォルトスタイル）。
  </p>
  <button type="button" class="c-alert__close">×</button>
</div>
```

```html
<div class="c-alert is-success">
  <p class="c-alert__message">
    <strong>完了です！</strong>完了や成功などのメッセージ文です。
  </p>
  <button type="button" class="c-alert__close">×</button>
</div>
```

```html
<div class="c-alert is-info">
  <p class="c-alert__message">
    <strong>説明です！</strong>説明やインフォメーションなどのメッセージ文です。
  </p>
  <button type="button" class="c-alert__close">×</button>
</div>
```

```html
<div class="c-alert is-warning">
  <p class="c-alert__message">
    <strong>注意！</strong>注意や警告などのメッセージ文です。
  </p>
  <button type="button" class="c-alert__close">×</button>
</div>
```

```html
<div class="c-alert is-danger">
  <p class="c-alert__message">
    <strong>エラー！</strong>エラーや強い警告などのメッセージ文です。
  </p>
  <button type="button" class="c-alert__close">×</button>
</div>
```

*/

.c-alert {
  position: relative;
  border: 1px solid map-get($g-oc-colors, default--border);
  border-radius: $g-border-radius--alert;
  line-height: 1.5;
  background-color: map-get($g-oc-colors, default--background);
  @include rem(padding, 10px 24px 10px 12px);
  
  // modifiers
  $modifiers: success, info, warning, danger;
  @each $modifier in $modifiers {
    &.is-#{$modifier} {
      border-color     : map-get($g-oc-colors, #{$modifier}--border);
      color            : map-get($g-oc-colors, #{$modifier}--text);
      background-color : map-get($g-oc-colors, #{$modifier}--background);
    }
  }
  
  // element
  &__message {
    display: block;
    @include rem(margin, 2px 0);
    > * {
      margin-right: 0.3em;
    }
  }
  &__close {
    $close-size  : 20px;
    $icon-size   : 12px;
    $line-height : ($close-size / $icon-size);
    
    position: absolute;
    top: 4px;
    right: 4px;
    cursor: pointer;
    margin: 0;
    padding: 0;
    border: none;
    overflow: hidden;
    color: transparent;
    background-color: transparent;
    @include appearance(none);
    @include rem(width, $close-size);
    @include rem(height, $close-size);
    &:before {
      display: inline-block;
      color: $g-icon-color--dark;
      text-align: center;
      line-height: $line-height;
      
      @include rem(width, $close-size);
      @include rem(height, $close-size);
      @include rem(font-size, $icon-size);
      @include glyph(owner, wrong);
    }
    &:hover:before {
      color: $g-icon-color--light;
    }
  }
}
